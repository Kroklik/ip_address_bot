from telebot import TeleBot
from telebot.types import Message, ReplyKeyboardRemove, ReplyKeyboardMarkup, KeyboardButton
from config import TOKEN, IP_TOKEN
from markups import main_menu
import requests

bot = TeleBot(TOKEN)


# –ö–æ–º–∞–Ω–¥–∞ /start
@bot.message_handler(commands=['start'])
def start(message: Message):
    chat_id = message.from_user.id
    bot.send_message(chat_id,
                     f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.username}! '
                     '–≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç –≤–∞–º —É–∑–Ω–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ª—é–±–æ–º IP-–∞–¥—Ä–µ—Å–µ. '
                     '–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å!',
                     reply_markup=main_menu())


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–£–∑–Ω–∞—Ç—å –æ–± IP"
@bot.message_handler(regexp='–£–∑–Ω–∞—Ç—å –æ–± IP')
def ask_for_ip(message: Message):
    chat_id = message.from_user.id
    msg = bot.send_message(chat_id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ IP-–∞–¥—Ä–µ—Å. –ü—Ä–∏–º–µ—Ä: 84.54.78.12',
                           reply_markup=ReplyKeyboardRemove())
    bot.register_next_step_handler(msg, process_ip)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–µ–¥—ë–Ω–Ω–æ–≥–æ IP
def process_ip(message: Message):
    chat_id = message.from_user.id
    ip = message.text.strip()

    if not validate_ip(ip):
        bot.send_message(chat_id, '‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç IP-–∞–¥—Ä–µ—Å–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.', reply_markup=main_menu())
        return

    send_ip = f'https://ipinfo.io/{ip}?token={IP_TOKEN}'

    try:
        response = requests.get(send_ip)
        response.raise_for_status()
        data = response.json()

        loc = data['loc'].split(',')
        longitude = loc[1]
        latitude = loc[0]

        result = f'''
üåê <b>IP-–∞–¥—Ä–µ—Å:</b> {data['ip']}
üèôÔ∏è <b>–ì–æ—Ä–æ–¥:</b> {data['city']}
üåç <b>–†–µ–≥–∏–æ–Ω:</b> {data['region']}
üè≥Ô∏è <b>–°—Ç—Ä–∞–Ω–∞:</b> {data['country']}

üìç <b>–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã:</b>
  ‚Ä¢ <b>–®–∏—Ä–æ—Ç–∞:</b> {latitude}
  ‚Ä¢ <b>–î–æ–ª–≥–æ—Ç–∞:</b> {longitude}

üï∞Ô∏è <b>–ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å:</b> {data['timezone']}
        '''

        bot.send_message(chat_id, result, parse_mode='HTML')
        ask_for_ip(message)

    except requests.RequestException:
        bot.send_message(chat_id, '‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.')
        ask_for_ip(message)


# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ IP-–∞–¥—Ä–µ—Å–∞
def validate_ip(ip: str) -> bool:
    import re
    pattern = re.compile(r'^\d{1,3}(\.\d{1,3}){3}$')
    return bool(pattern.match(ip))


bot.polling(none_stop=True)
